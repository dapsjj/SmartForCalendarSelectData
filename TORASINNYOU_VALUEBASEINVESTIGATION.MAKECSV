#!/bin/bash -xv
#
# TORASINNYOU_VALUEBASEINVESTIGATION.MAKECSV >>>価値基準考査出力
#
# Usage: TORASINNYOU_VALUEBASEINVESTIGATION.MAKECSV '10128204,10109664' '0' '0' '20190101' '20190202' or  TORASINNYOU_VALUEBASEINVESTIGATION.MAKECSV '0' '10005' '0' '20190101' '20190213' or TORASINNYOU_VALUEBASEINVESTIGATION.MAKECSV '0' '10005' '10696' '20190101' '20190202'
#
# Written by 10058798 /Date: 20190712


#/////////////////////////////////////////////////////////////////////////
# 初期設定
#/////////////////////////////////////////////////////////////////////////
# パスの定義
export PATH=/home/SMART:/home/SMART_TRIAL:/usr/local/bin:${PATH}
export LANG=ja_JP.UTF-8

HOME=/home/trial
logd=${HOME}/AP/TORASINNYOU/LOG                  # ログディレクトリ

# 走行ログの記録
echo   "${logd}/LOG.$(basename $0).$(date +%Y%m%d)_$(date +%H%M%S)_$$" &> /dev/null
exec 2> ${logd}/LOG.$(basename $0).$(date +%Y%m%d)_$(date +%H%M%S)_$$

#変数定義
semd=${HOME}/SEMAPHORE
tmp=/tmp/$$-$(basename $0)_$(date +%Y%m%d)_$(date +%H%M%S)
sday=$(date +%Y%m%d)
lv3d=/TORASINNYOU/LV3

# 引き数の確認
[ $# -ne 5 ] && exit 1


paraEmployeeCDList=$1                            # EmployeeCDリスト
paraCompanyCode=$2                               # CompanyCode
paraBelong1Code=$3                               # Belong1Code
paraStartDate=$4                                 # 出発開始日
paraEndDate=$5                                   # 出発終了日

downloadPath=/home/trial/AP/TORASINNYOU/DOWNLOAD
sysflg="TORASINNYOU"
stime=$(date +%Y%m%d%H%M%S)_$$

# エラー時の終了処理定義
ERROR_EXIT(){
  touch ${semd}/$(basename $0).${HOSTNAME}.ERROR.${sday}
  exit 1
}

#-------------------------------------------------------------------------------
# 処理開始
#-------------------------------------------------------------------------------
##従業員属性マスタ
if [ -e ${lv3d}/JINJI/ATTRIBUTE.gz ];then
    zcat ${lv3d}/JINJI/ATTRIBUTE.gz                                            |
    selcol -c1,8 -c21 -c37 -c16 -c14                                           | 
    fmtfixed -w10 -c2,8                                        >${tmp}-attribute
    #1.EmployeeManagementID 2.所属会社コード 3.管轄NO１ 4.所属・チームNO 5.課・ディビジョンNO
    #6.エリアNO 7.店舗NO 8.担当商品 9.予備項目２(世代GP) 10.給与ステージ 
    #11.職位等級 12.配転区分NO
    [ $(errchk  ${PIPESTATUS[@]}) -eq 0 ] || ERROR_EXIT
else
  ERROR_EXIT
fi
##会社コードがある場合
if [ ${paraCompanyCode} != '0' ];then
    echo ${paraCompanyCode}                                                    |
    #1:会社コード
    fmtfixed -w10 -c1                                                          |
    #1:会社コード
    hejoin -k2 - ${tmp}-attribute                      >${tmp}-attribute_company
    #1.EmployeeManagementID 2.所属会社コード 3.管轄NO１ 4.所属・チームNO 5.課・ディビジョンNO
    #6.エリアNO 7.店舗NO 8.担当商品 9.予備項目２(世代GP) 10.給与ステージ 
    #11.職位等級 12.配転区分NO
    [ $(errchk  ${PIPESTATUS[@]}) -eq 0 ] || ERROR_EXIT

    mv ${tmp}-attribute_company ${tmp}-attribute
fi

##部署がある場合
if [ ${paraBelong1Code} != '0' ];then
    echo ${paraBelong1Code}                                                    |
    #1:会社コード
    fmtfixed -w10 -c1                                                          |
    #1:会社コード
    hejoin -k3 - ${tmp}-attribute                       >${tmp}-attribute_belong
    #1.EmployeeManagementID 2.所属会社コード 3.管轄NO１ 4.所属・チームNO 5.課・ディビジョンNO
    #6.エリアNO 7.店舗NO 8.担当商品 9.予備項目２(世代GP) 10.給与ステージ 
    #11.職位等級 12.配転区分NO
    [ $(errchk  ${PIPESTATUS[@]}) -eq 0 ] || ERROR_EXIT

    mv ${tmp}-attribute_belong ${tmp}-attribute 
fi

##従業員基本情報
if [ -e ${lv3d}/JINJI/EMPLOYEEBASIC.gz ];then
    zcat ${lv3d}/JINJI/EMPLOYEEBASIC.gz                                        |
    #1:従業員管理ID 2:社員番号 3:社員名 4:...
    selcol -c1,3                                                               |
    #1:従業員管理ID 2:社員番号 3:社員名
    ssort -k1,2                                                    >${tmp}-basic
    [ $(errchk  ${PIPESTATUS[@]}) -eq 0 ] || ERROR_EXIT

    ##会社コートあるいは部署がある場合
    if [ -s ${tmp}-attribute ];then
        kuniq -k1 ${tmp}-attribute                                             |
        #1:従業員管理ID
        hejoin -k1 - ${tmp}-basic                                              |
        #1:従業員管理ID 2:社員番号 3:社員名
        kuniq -k2,3                                         >${tmp}-employeelist
        #1:社員番号 2:社員名
        [ $(errchk  ${PIPESTATUS[@]}) -eq 0 ] || ERROR_EXIT
    else
        kuniq -k2,3 ${tmp}-basic                            >${tmp}-employeelist
        #1:社員番号 2:社員名
        [ $(errchk  ${PIPESTATUS[@]}) -eq 0 ] || ERROR_EXIT
    fi
else
    ERROR_EXIT
fi

##社員番号ある場合
if [ ${paraEmployeeCDList} != '0' ];then
    echo ${paraEmployeeCDList}                                                 |
    #","を" "に置き換える
    sed 's/\,/ /g'                                                             |
    tov                                                                        |
    fmtfixed -w10 -c1                                                          |
    #1:社員番号
    ssort -k1                                                                  |
    ejoin -k1 - ${tmp}-employeelist                                            |
    #1:社員番号 2:社員名
    ssort -k1                                                    >${tmp}-emplist
    [ $(errchk  ${PIPESTATUS[@]}) -eq 0 ] || ERROR_EXIT
else
    cp ${tmp}-employeelist ${tmp}-emplist
fi

if [ -e ${lv3d}/VALUEBASEINVESTIGATION/MDLUSERINFODATA.gz ];then
    zcat ${lv3d}/VALUEBASEINVESTIGATION/MDLUSERINFODATA.gz                     |
    #1:id 2:userid 3:fieldid＝2 4:data 5:dataformat
    awk '$3==2{print sprintf("%010d",$2)}'                                     |
    #1:userid
    ssort -k1                                                   >${tmp}-userinfo
    [ $(errchk  ${PIPESTATUS[@]}) -eq 0 ] || ERROR_EXIT
else
    ERROR_EXIT
fi

if [ -e ${lv3d}/VALUEBASEINVESTIGATION/MDLUSER.gz ];then
    zcat ${lv3d}/VALUEBASEINVESTIGATION/MDLUSER.gz                             |
    #1:id 2:auth 3:confirmed 4:policyagreed 5:deleted 6:suspended 7:mnethostid
    #8:username 9:password 10:idnumber 11:firstname 12:lastname 13:email
    #14:emailstop 15:icq 16:skype 17:yahoo 18:aim 19:msn 20:phone1 21:phone2
    #22:institution 23:department 24:address 25:city 26:country 27:lang
    #28:calendartype 29:theme 30:timezone 31:firstaccess 32:lastaccess 33:lastlogin
    #34:currentlogin 35:lastip 36:secret 37:picture 38:url 39:description
    #40:descriptionformat 41:mailformat 42:maildigest 43:maildisplay 44:autosubscribe
    #45:trackforums 46:timecreated 47:timemodified 48:trustbitmask 49:imagealt
    #50:lastnamephonetic 51:firstnamephonetic 52:middlename 53:alternatename
    #deleted:0 有効
    awk '$5==0{print $1,sprintf("%010d",$8)}'                                  |
    #1:ID 2:社員番号
    hejoin -k1 ${tmp}-userinfo -                                               |
    #1:ID 2:社員番号
    hijoin -k2 ${tmp}-emplist -                                                |
    #1:ID 2:社員番号 3:社員名
    ssort -k1,2                                             >${tmp}-employee_obj
    [ $(errchk  ${PIPESTATUS[@]}) -eq 0 ] || ERROR_EXIT
else
    ERROR_EXIT
fi
#価値基準考査　受験対象情報取得
if [ -e ${lv3d}/VALUEBASEINVESTIGATION/MDLQUIZATTEMPTS.gz ];then
    zcat ${lv3d}/VALUEBASEINVESTIGATION/MDLQUIZATTEMPTS.gz                     |
    #1:id 2:quiz 3:userid 4:attempt 5:uniqueid 6:layout 7:currentpage 8:preview
    #9:state 10:timestart 11:timefinish 12:timemodified 13:timecheckstate
    #14:sumgrades
    awk '$2!=1043&&$11!="19700101090000"{print $2,$3,$4,$11,$14}'              |
    #1:quiz 2:userid 3:attempt 4:timefinish 5:sumgrades
    fmtfixed -w10 -c2                                                          |
    ssort -k2                                                                  |
    ijoin -k2 ${tmp}-employee_obj -                                            |
    #1:quiz（テストID） 2:userid 3:社員番号 4:社員名 5:attempt 6:timefinish 7:sumgrades
    selcol -c2 -c1,7                                            >${tmp}-attempts
    #1:userid 2:quiz（テストID） 3:userid 4:社員番号 5:社員名 6:attempt 7:timefinish
    #8:sumgrades
    [ $(errchk  ${PIPESTATUS[@]}) -eq 0 ] || ERROR_EXIT

    selcol -c1,2 -c7 -c6 ${tmp}-attempts                                       |
    #1:userid  2:quiz（テストID） 3:timefinish 4:attempt
    ssort -k1,3                                                                |
    lstrow -k1,2                                                               |
    #1:userid  2:quiz（テストID） 3:timefinish 4:attempt
    sort -k1,2                                                  >${tmp}-lasttime
    #1:userid  2:quiz（テストID） 3:timefinish 4:attempt
    [ $(errchk  ${PIPESTATUS[@]}) -eq 0 ] || ERROR_EXIT

    selcol -c1,2 -c8 -c4,5   ${tmp}-attempts                                   |
    #1:userid 2:quiz（テストID） 3:sumgrades 4:社員番号 5:社員名 
    ssort -k1,3                                                                |
    lstrow -k1,2                                                               |
    ijoin -k1,2 ${tmp}-lasttime                                                |
    fmtfixed -w10 -c2                                    >${tmp}-mdlquizattempts
    #1:userid  2:quiz（テストID） 3:timefinish 4:attempt 5:sumgrades 6:社員番号 7:社員名
fi

#価値基準考査の出題マスタ 対象取得
if [ -e ${lv3d}/VALUEBASEINVESTIGATION/MDLQUIZ.gz ];then
    zcat ${lv3d}/VALUEBASEINVESTIGATION/MDLQUIZ.gz                             |
    #1:id 2:course 3:name 4:intro 5:introformat 6:timeopen 7:timeclose 8:timelimit
    #9:overduehandling 10:graceperiod 11:preferredbehaviour 12:canredoquestions
    #13:attempts 14:attemptonlast 15:grademethod 16:decimalpoints 17:questiondecimalpoints
    #18:reviewattempt 19:reviewcorrectness 20:reviewmarks 21:reviewspecificfeedback
    #22:reviewgeneralfeedback 23:reviewrightanswer 24:reviewoverallfeedback
    #25:questionsperpage 26:navmethod 27:shuffleanswers 28:sumgrades 29:grade
    #30:timecreated 31:timemodified 32:password 33:subnet 34:browsersecurity
    #35:delay1 36:delay2 37:showuserpicture 38:showblocks 39:completionattemptsexhausted
    #40:completionpass
    awk '$6>="'${paraStartDate}'"&&$6<="'${paraEndDate}'"&&$2==465{print $1,$2,$3,$6,  \
         $7,$28}'                                                              |
    #1:id 2:course 3:name 4:timeopen 5:timeclose 6:sumgrades
    ssort -k1                                                                  |
    hijoin -k2 - ${tmp}-mdlquizattempts                                        |
    #1:userid  2:quiz（テストID） 3:course 4:name 5:timeopen 6:timeclose 7:sumgrades
    #8:timefinish 9:attempt 10:sumgrades 11:社員番号 12:社員名
    awk '{print $2,$4,$5,$6,$11,$12,$7,$9,sprintf("%.1f",$10),                 \
          sprintf("%.0f",$10/$7*100)"%",$8}'                                   |
    #1:quiz（テストID） 2:テスト名 3:開始日時 4:終了日時 5:社員番号 6:社員名 7:満点 8:受験回数
    #9:最高得点 10:評点率 11:最終テスト完了時間
    ssort -k1                                                     >${tmp}-result
    [ $(errchk  ${PIPESTATUS[@]}) -eq 0 ] || ERROR_EXIT
else
    ERROR_EXIT
fi



#CSVの作成
cd ${downloadPath}
cat ${tmp}-result|cat <(echo 'テストID テスト名 開始日時 終了日時 社員番号 社員名 満点 受験回数 最高得点 評点率 最終テスト完了時間') - | 
nkf -sxLw        |
sed 's/,/_/g'  |sed 's/ /,/g'  > ${sysflg}_"valuebaseinvestigation"_${stime}_.csv  		
[ $(errchk  ${PIPESTATUS[@]}) -eq 0 ] || ERROR_EXIT

echo ${sysflg}_"valuebaseinvestigation"_${stime}_.csv
[ $(errchk ${PIPESTATUS[@]}) -eq 0 ] || ERROR_EXIT


# 終了
rm -Rf ${tmp}-* &>/dev/null
exit 0


