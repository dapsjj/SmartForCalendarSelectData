#!/bin/bash -xv
#
# TORASINNYOU_CALENDAR.SEARCH>> カレンダー指定日と人員データ取得
# Usage : TORASINNYOU_CALENDAR.SEARCH <YYYYMMDD>
#
# Written by song.jiajun /Date : 20190612
# Modified by song.jiajun /Date : 20190612


#/////////////////////////////////////////////////////////////////////////
# 初期設定
#/////////////////////////////////////////////////////////////////////////
# パスの定義
export PATH=/home/SMART_TRIAL:/home/SMART:/usr/local/bin:${PATH}
export LANG=ja_JP.UTF-8

HOME=/home/trial
logd=${HOME}/AP/TORASINNYOU/LOG                  # ログディレクトリ

# 走行ログの記録
echo   "${logd}/LOG.$(basename $0).$(date +%Y%m%d)_$(date +%H%M%S)_$$" &> /dev/null
exec 2> ${logd}/LOG.$(basename $0).$(date +%Y%m%d)_$(date +%H%M%S)_$$

# 変数の定義
semd=${HOME}/SEMAPHORE
tmp=/tmp/$$-$(basename $0)_$(date +%Y%m%d)_$(date +%H%M%S)
sday=$(date +%Y%m%d)                             # 日付
lv3d=/TORASINNYOU/LV3/CALENDAR                   # Level3ディレクトリ
paraGmailList=$1                                 # gmailリスト
paraStartDate=$2                                 # クエリーの開始日
paraEndDate=$3                                   # クエリー終了日

startDate=${paraStartDate:0:4}-${paraStartDate:4:2}-${paraStartDate:6:2} #加工後の開始日
endDate=${paraEndDate:0:4}-${paraEndDate:4:2}-${paraEndDate:6:2}         #加工後の終了日
eventStatus="confirmed"                                                  #確認されたイベント
eventVisibility="private"                                                #プライベートイベント


# エラー時の終了処理定義
ERROR_EXIT(){
  touch ${semd}/$(basename $0).${HOSTNAME}.ERROR.${sday}
  exit 1
}

#SEMAPHORE削除
rm -rf ${semd}/$(basename $0)*${sday}


##判断LV3ファイルALLEVENTS.gz存在
if [ -e ${lv3d}/ALLEVENTS.gz ];then
    ##ファイルバックアップ
    
	echo ${paraGmailList} |sed 's/\,/ /g' | tov >${tmp}-gmailList #","を" "に置き換える
	zcat ${lv3d}/ALLEVENTS.gz | hejoin -k80 ${tmp}-gmailList - |
	awk '(substr($30,1,10)>="'${startDate}'"&&substr($33,1,10)<="'${endDate}'")||(substr($31,1,10)>="'${startDate}'"&&substr($34,1,10)<="'${endDate}'")' |
	#1.カレンダーのタイトル 2.イベントの状態 3.イベントのタイトル 4.イベント開始日 5.イベント開始時間 6.イベント終了日 7.イベント終了時間 8.イベントの可視性
	selcol -c3 -c14 -c18 -c30,31 -c33,34 -c43 |
	selrow -e '$2=="'${eventStatus}'"'        |
	selrow -e '$8!="'${eventVisibility}'"'    > ${tmp}-result
	[ $(errchk ${PIPESTATUS[@]}) -eq 0 ] || ERROR_EXIT
	
	if [ -s ${tmp}-result ] ; then
	   while read rootSummary status summary startdate starttime enddate endtime visibility; do 
		 if [ "${starttime}" == "_" ] && [ "${enddate}" == "_" ];then
		    enddate=$(sdate ${enddate}d/-1)
			echo ${rootSummary} ${status} ${summary} ${startdate} ${starttime} ${enddate} ${endtime} ${visibility} >> ${tmp}-file    
		 else 
			#starttime=${starttime:0:10}-${starttime:11:5}
			starttime=${starttime:0:16}
			#endtime=${endtime:0:10}-${endtime:11:5}
			endtime=${endtime:0:16}
			echo ${rootSummary} ${status} ${summary} ${startdate} ${starttime} ${enddate} ${endtime} ${visibility} >> ${tmp}-file  		
		 fi                                 
	   :; done < ${tmp}-result
	else
	  ERROR_EXIT
	fi
else
  ERROR_EXIT
fi


cat ${tmp}-file|cat <(echo 'rootSummary status summary startDate startTime endDate endTime visibility') - | tojson -h > ${tmp}-file-2 #JSON形式に処理します
[ $(errchk ${PIPESTATUS[@]}) -eq 0 ] || ERROR_EXIT

cat ${tmp}-file-2
[ $(errchk ${PIPESTATUS[@]}) -eq 0 ] || ERROR_EXIT

# 終了
rm -Rf ${tmp}-* &>/dev/null
exit 0
