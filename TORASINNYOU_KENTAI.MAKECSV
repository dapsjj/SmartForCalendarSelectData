#!/bin/bash -xv
#
# TORASINNYOU_KENTAI.MAKECSV>> 勤怠データ生成
# Usage : TORASINNYOU_KENTAI.MAKECSV '10128204,10109664' '20190521' '20190530'
#
# Written by song.jiajun /Date : 20190625
# Modified by song.jiajun /Date : 20190625


#/////////////////////////////////////////////////////////////////////////
# 初期設定
#/////////////////////////////////////////////////////////////////////////
# パスの定義
export PATH=/home/SMART_TRIAL:/home/SMART:/usr/local/bin:${PATH}
export LANG=ja_JP.UTF-8

HOME=/home/trial
logd=${HOME}/AP/TORASINNYOU/LOG                  # ログディレクトリ

# 走行ログの記録
echo   "${logd}/LOG.$(basename $0).$(date +%Y%m%d)_$(date +%H%M%S)_$$" &> /dev/null
exec 2> ${logd}/LOG.$(basename $0).$(date +%Y%m%d)_$(date +%H%M%S)_$$

# 変数の定義
semd=${HOME}/SEMAPHORE
tmp=/tmp/$$-$(basename $0)_$(date +%Y%m%d)_$(date +%H%M%S)
sday=$(date +%Y%m%d)                             # 日付
lv3d1=/TORASINNYOU/LV3/JINJI                     # Level3ディレクトリ1
lv3d2=/TORASINNYOU/LV3/KENTAI                    # Level3ディレクトリ2
paraEmployeeCDList=$1                            # EmployeeCDリスト
paraStartDate=$2                                 # クエリーの開始日
paraEndDate=$3                                   # クエリー終了日
tempmaster=/home/trial/AP/TORASINNYOU/TEMP_MASTER  #tempマスターのパス

downloadPath=/home/trial/AP/TORASINNYOU/DOWNLOAD
sysflg="TORASINNYOU"
stime=$(date +%Y%m%d%H%M%S)_$$

# エラー時の終了処理定義
ERROR_EXIT(){
  touch ${semd}/$(basename $0).${HOSTNAME}.ERROR.${sday}
  exit 1
}

#SEMAPHORE削除
rm -rf ${semd}/$(basename $0)*${sday}


#/////////////////////////////////////////////////////////////////////////
# 処理部分
#/////////////////////////////////////////////////////////////////////////


echo ${paraEmployeeCDList}                                                     |
sed 's/\,/ /g'                                                                 | 
tov                                                                            |
fmtfixed -w10 -c1                                                              |
ssort -k1                                                                      >${tmp}-EmployeeCDList 
#","を" "に置き換える                                                               
#テキスト"${tmp}-EmployeeCDList"1列の内容:                                          
#1.従業員CD 


#判断LV3ファイルOPERATIONPLAN.gz存在
if [ -e ${lv3d2}/OPERATIONPLAN.gz ];then
		zcat ${lv3d2}/OPERATIONPLAN.gz                                         |
		substr -c2.1.8                                                         |
        fmtfixed -w10 -c1                                                      |
		hejoin -k1 ${tmp}-EmployeeCDList -                                     |
		selrow -e '$2>='${paraStartDate}'&&$2<='${paraEndDate}                 |
		ssort -k1                                                              >${tmp}-operationplan2
		#テキスト"${tmp}-operationplan2"9列の内容:
		#1.従業員CD 2.年月日(日付) 3.出勤計画時間 4.退勤計画時間 5.稼働時間 
		#6.休憩時間 7.稼動区分 8.更新日 9.更新担当CD 
		[ $(errchk  ${PIPESTATUS[@]}) -eq 0 ] || ERROR_EXIT

else
  ERROR_EXIT
fi


#判断RETIREMENTDIVISION存在,退職区分
if [ -e ${tempmaster}/RETIREMENTDIVISION ];then    
		#RETIREMENTDIVISIONの第1、2列を取る
		cat ${tempmaster}/RETIREMENTDIVISION                                   | 
		selcol -c1,2                                                           | 
		fmtfixed -w2 -c1                                                       |
		ssort -k1                                                              >${tmp}-retirementdivision
		#テキスト"${tmp}-retirementdivision"2列の内容:
		#1.退職区分CD 2.退職区分名前
		[ $(errchk  ${PIPESTATUS[@]}) -eq 0 ] || ERROR_EXIT

else
  ERROR_EXIT
fi


#判断LV3ファイルJMSTEMPLOYMENTTYPE.gz存在,社員区分
if [ -e ${lv3d1}/JMSTEMPLOYMENTTYPE.gz ];then
		#JMSTEMPLOYMENTTYPE.gzの第1、2列を取る
		zcat ${lv3d1}/JMSTEMPLOYMENTTYPE.gz                                    | 
		selcol -c1,2                                                           | 
		fmtfixed -w2 -c1                                                       |
		ssort -k1                                                              >${tmp}-jmstemploymenttype
		#テキスト"${tmp}-jmstemploymenttype"2列の内容:
		#1.社員区分番号 2.社員区分名前
		[ $(errchk  ${PIPESTATUS[@]}) -eq 0 ] || ERROR_EXIT
else
  ERROR_EXIT
fi 
  
#判断TMATTENDANCE存在,稼动区分
if [ -e ${tempmaster}/TMATTENDANCE ];then    
		#TMATTENDANCEの第1、2列を取る
		cat ${tempmaster}/TMATTENDANCE                                         | 
		selcol -c1,2                                                           | 
		fmtfixed -w2 -c1                                                       |
		ssort -k1                                                              >${tmp}-tmattendance
		#テキスト"${tmp}-tmattendance"2列の内容:
		#1.稼动区分CD 2.稼动区分名前
		[ $(errchk  ${PIPESTATUS[@]}) -eq 0 ] || ERROR_EXIT
else
  ERROR_EXIT
fi  


#判断LV3ファイルEMPLOYEEBASIC.gz存在
if [ -e ${lv3d1}/EMPLOYEEBASIC.gz ];then
		#EMPLOYEEBASIC.gzの第2、3、14、28列を取る
		zcat ${lv3d1}/EMPLOYEEBASIC.gz                                         |
		selcol -c2,3 -c14 -c28                                                 |
        selrow -e '$3!=1&&$3!=2'                                               |
		selrow -e '$4=="1"||$4=="3"'                                           |		
		fmtfixed -w10 -c1                                                      | 
		ssort -k1                                                              >${tmp}-employeebasic2
		##テキスト"${tmp}-employeebasic2"4列の内容:
		#1.従業員コード 2.従業員名称 3.退職区分 4.従業員区分NO		
		
		#関連表
		hrjoin -k1 -inull ${tmp}-employeebasic2 ${tmp}-operationplan2          | 
        selcol -c1 -c5 -c2,4 -c6,12                                            >${tmp}-employeebasic2-operationplan2
		#テキスト"${tmp}-employeebasic2-operationplan2"12列の内容:
		#1.従業員CD 2.年月日(日付) 3.従業員名称 4.退職区分 5.従業員区分NO 
		#6.出勤計画時間 7.退勤計画時間 8.稼働時間 9.休憩時間 10.稼動区分
		#11.更新日 12.更新担当CD
		[ $(errchk  ${PIPESTATUS[@]}) -eq 0 ] || ERROR_EXIT
else
  ERROR_EXIT
fi

#判断LV3ファイルDAYKINTAI.gz存在
if [ -e ${lv3d2}/DAYKINTAI.gz ];then
		zcat ${lv3d2}/DAYKINTAI.gz                                             |
		substr -c2.1.8                                                         |
		fmtfixed -w10 -c1                                                      |
		hejoin -k1 ${tmp}-EmployeeCDList - 		                               |
		selrow -e '$2>='${paraStartDate}'&&$2<='${paraEndDate}                 |
		ssort -k1,2                                                            >${tmp}-daykintai2
		#テキスト"${tmp}-daykintai2"27列の内容:
		#1.従業員CD 2.日付 3.計画出勤時刻 4.計画退勤時刻 5.計画稼動時間	
		#6.計画休憩時間 7.実績出勤時刻 8.実績退勤時刻 9.計算出勤時刻 10.計算退勤時刻
  		#11.実績拘束時間 12.実績休憩時間 13.実績稼動時間 14.実績残業時間 15.実績早朝時間
		#16.実績深夜時間 17.実績割増時間 18.実績調整手当 19.有給フラグ 20.遅刻フラグ
		#21.修正フラグ 22.ClockFlg 23.PlanClockKind 24.更新日 25.更新担当CD 
		#26.initialStampOnTime(実出勤打刻時間) 27.initialStampOutTime(実退勤打刻時間)
		
		#関連表
		hrjoin -k1,2 -inull ${tmp}-daykintai2 ${tmp}-employeebasic2-operationplan2 |
		ssort -k1,2                                                            >${tmp}-resultoperationplan 
		#テキスト"${tmp}-resultoperationplan"37列の内容:
		#1.従業員CD 2.年月日(日付) 3.計画出勤時刻 4.計画退勤時刻 5.計画稼動時間	
		#6.計画休憩時間 7.実績出勤時刻 8.実績退勤時刻 9.計算出勤時刻 10.計算退勤時刻
  		#11.実績拘束時間 12.実績休憩時間 13.実績稼動時間 14.実績残業時間 15.実績早朝時間
		#16.実績深夜時間 17.実績割増時間 18.実績調整手当 19.有給フラグ 20.遅刻フラグ
		#21.修正フラグ 22.ClockFlg 23.PlanClockKind 24.更新日 25.更新担当CD 
		#26.initialStampOnTime(実出勤打刻時間) 27.initialStampOutTime(実退勤打刻時間) 28.従業員名称 29.退職区分 30.従業員区分NO 
		#31.出勤計画時間 32.退勤計画時間 33.稼働時間 34.休憩時間 35.稼動区分
		#36.更新日 37.更新担当CD 		
		[ $(errchk  ${PIPESTATUS[@]}) -eq 0 ] || ERROR_EXIT
else
  ERROR_EXIT
fi


#判断${tmp}-resultoperationplan存在
if [ -s ${tmp}-resultoperationplan ];then #-s ファイル長は0ではありません
		cat ${tmp}-resultoperationplan                                             |
		fmtfixed -w2 -c29                                                          |
		hrjoin -k29 -inull ${tmp}-retirementdivision -                             |
		ssort -k1,2                                                                >${tmp}-resultoperationplan-file1 		
		#テキスト"${tmp}-resultoperationplan-file1"38列の内容:
		#1.従業員CD 2.年月日(日付) 3.計画出勤時刻 4.計画退勤時刻 5.計画稼動時間	
		#6.計画休憩時間 7.実績出勤時刻 8.実績退勤時刻 9.計算出勤時刻 10.計算退勤時刻
  		#11.実績拘束時間 12.実績休憩時間 13.実績稼動時間 14.実績残業時間 15.実績早朝時間
		#16.実績深夜時間 17.実績割増時間 18.実績調整手当 19.有給フラグ 20.遅刻フラグ
		#21.修正フラグ 22.ClockFlg 23.PlanClockKind 24.更新日 25.更新担当CD 
		#26.initialStampOnTime(実出勤打刻時間) 27.initialStampOutTime(実退勤打刻時間) 28.従業員名称 29.退職区分 30.退職区分名前 
		#31.従業員区分NO 32.出勤計画時間 33.退勤計画時間 34.稼働時間 35.休憩時間 
		#36.稼動区分 37.更新日 38.更新担当CD 		
		[ $(errchk  ${PIPESTATUS[@]}) -eq 0 ] || ERROR_EXIT
else
  ERROR_EXIT
fi


#判断${tmp}-resultoperationplan-file1存在
if [ -s ${tmp}-resultoperationplan-file1 ];then  #-s ファイル長は0ではありません
		cat ${tmp}-resultoperationplan-file1                                             |
		fmtfixed -w2 -c31                                                                |
		hrjoin -k31 -inull ${tmp}-jmstemploymenttype -                                   |
		ssort -k1,2                                                                      >${tmp}-resultoperationplan-file2		
		#テキスト"${tmp}-resultoperationplan-file2"39列の内容:
		#1.従業員CD 2.年月日(日付) 3.計画出勤時刻 4.計画退勤時刻 5.計画稼動時間	
		#6.計画休憩時間 7.実績出勤時刻 8.実績退勤時刻 9.計算出勤時刻 10.計算退勤時刻
  		#11.実績拘束時間 12.実績休憩時間 13.実績稼動時間 14.実績残業時間 15.実績早朝時間
		#16.実績深夜時間 17.実績割増時間 18.実績調整手当 19.有給フラグ 20.遅刻フラグ
		#21.修正フラグ 22.ClockFlg 23.PlanClockKind 24.更新日 25.更新担当CD 
		#26.initialStampOnTime(実出勤打刻時間) 27.initialStampOutTime(実退勤打刻時間) 28.従業員名称 29.退職区分 30.退職区分名前 
		#31.従業員区分NO 32.従業員区分名前 33.出勤計画時間 34.退勤計画時間 35.稼働時間 
		#36.休憩時間 37.稼動区分 38.更新日 39.更新担当CD 		
		[ $(errchk  ${PIPESTATUS[@]}) -eq 0 ] || ERROR_EXIT
else
  ERROR_EXIT
fi



#判断${tmp}-resultoperationplan-file2存在
if [ -s ${tmp}-resultoperationplan-file2 ];then  #-s ファイル長は0ではありません
		cat ${tmp}-resultoperationplan-file2                                             |
		fmtfixed -w2 -c37                                                                |
		hrjoin -k37 -inull ${tmp}-tmattendance -                                         |
		ssort -k1,2                                                                      >${tmp}-resultoperationplan-file3		
		#テキスト"${tmp}-resultoperationplan-file2"40列の内容:
		#1.従業員CD 2.年月日(日付) 3.計画出勤時刻 4.計画退勤時刻 5.計画稼動時間	
		#6.計画休憩時間 7.実績出勤時刻 8.実績退勤時刻 9.計算出勤時刻 10.計算退勤時刻
  		#11.実績拘束時間 12.実績休憩時間 13.実績稼動時間 14.実績残業時間 15.実績早朝時間
		#16.実績深夜時間 17.実績割増時間 18.実績調整手当 19.有給フラグ 20.遅刻フラグ
		#21.修正フラグ 22.ClockFlg 23.PlanClockKind 24.更新日 25.更新担当CD 
		#26.initialStampOnTime(実出勤打刻時間) 27.initialStampOutTime(実退勤打刻時間) 28.従業員名称 29.退職区分 30.退職区分名前 
		#31.従業員区分NO 32.従業員区分名前 33.出勤計画時間 34.退勤計画時間 35.稼働時間 
		#36.休憩時間 37.稼動区分 38.稼动区分名前 39.更新日 40.更新担当CD 		
		[ $(errchk  ${PIPESTATUS[@]}) -eq 0 ] || ERROR_EXIT
else
  ERROR_EXIT
fi


                                                                    
																	           
cat ${tmp}-resultoperationplan-file3	                                       |
fmtfixed -w10 -c1                                                              |
hejoin -k1 ${tmp}-EmployeeCDList -                                             |
#テキスト"${tmp}-resultoperationplan-file3"40列の内容:
#1.従業員CD 2.年月日(日付) 3.計画出勤時刻 4.計画退勤時刻 5.計画稼動時間	
#6.計画休憩時間 7.実績出勤時刻 8.実績退勤時刻 9.計算出勤時刻 10.計算退勤時刻
#11.実績拘束時間 12.実績休憩時間 13.実績稼動時間 14.実績残業時間 15.実績早朝時間
#16.実績深夜時間 17.実績割増時間 18.実績調整手当 19.有給フラグ 20.遅刻フラグ
#21.修正フラグ 22.ClockFlg 23.PlanClockKind 24.更新日 25.更新担当CD 
#26.initialStampOnTime(実出勤打刻時間) 27.initialStampOutTime(実退勤打刻時間) 28.従業員名称 29.退職区分 30.退職区分名前 
#31.従業員区分NO 32.従業員区分名前 33.出勤計画時間 34.退勤計画時間 35.稼働時間 
#36.休憩時間 37.稼動区分 38.稼动区分名前 39.更新日 40.更新担当CD 

selcol -c1 -c28 -c29,30 -c31,32 -c2 -c37,38 -c33,34 -c26,27 -c7,10 -c14 -c39,40 >${tmp}-result 
#テキスト"${tmp}-resultoperationplan-file3"20列の内容:
#1.従業員CD 2.従業員名称 3.退職区分 4.退職区分名前 5.従業員区分
#6.従業員区分名前 7.年月日 8.稼動区分 9.稼动区分名前 10.出勤計画時間
#11.退勤計画時間 12.initialStampOnTime(実出勤打刻時間) 13.initialStampOutTime(実退勤打刻時間) 14.実績出勤時刻 15.実績退勤時刻
#16.計算出勤時刻 17.計算退勤時刻 18.実績残業時間 19.更新日 20.更新担当CD
[ $(errchk  ${PIPESTATUS[@]}) -eq 0 ] || ERROR_EXIT

#CSVの作成
cd ${downloadPath}
cat ${tmp}-result|cat <(echo '従業員CD 従業員名称 退職区分 退職区分名前 従業員区分 従業員区分名前 年月日 稼動区分 稼动区分名前 出勤計画時間 退勤計画時間 実出勤打刻時間 実退勤打刻時間 実績出勤時刻 実績退勤時刻 計算出勤時刻 計算退勤時刻 実績残業時間 更新日 更新担当CD') - | 
nkf -sxLw        |
sed 's/,/_/g'  |sed 's/ /,/g'  > ${sysflg}_"kentai"_${stime}_.csv  		
[ $(errchk  ${PIPESTATUS[@]}) -eq 0 ] || ERROR_EXIT

echo ${sysflg}_"kentai"_${stime}_.csv
[ $(errchk ${PIPESTATUS[@]}) -eq 0 ] || ERROR_EXIT


# 終了
rm -Rf ${tmp}-* &>/dev/null
exit 0
